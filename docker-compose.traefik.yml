version: "3.8"

networks:
    frontend:
#        external: true
        name: ${FRONTEND_NETWORK_NAME:?frontend_network_name}

    backend:
        name: backend

    api:
      external: true
      name: api

services:

  #Note, as part of the assessment, all 'labels' and 'command' sections in the traefik service  have been verified to work correctly. 
  #no other sections should be assumed to be correct
  traefik:
    image: "traefik:v2.8"
    networks:
      - frontend
    command:
      - "--log.level=INFO"
      - "--api=true"
      - "--api.dashboard=true"
#To enable web UI
#      - "--api.insecure=true"
      # Enabling docker provider
      - "--providers.docker=true"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accessLog"
      - "--metrics=true"
      - "--metrics.prometheus"
      - "--providers.docker.network=frontend"
    ports:
#TCP port for http
      - target: 80
        published: 80
        mode: host
#SSL port
      - target: 443
        published: 443
        mode: host
#HTTP port for web proxy like traefik
      - target: 8080
        published: 8080
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels: 
      - "traefik.enable=true"
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.auth.basicauth.users=user:$$apr1$$g9fszoy6$$yW1HCGMpYNmTfk50XO3cF1" # user/password

      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.middlewares=auth"


  whoami:
    image: traefik/whoami:v1.7.1
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.middlewares=auth"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"

  prometheus:
    image: prom/prometheus:v2.10.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    networks:
      - frontend
      - backend
      - api
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - '9090:9090'
    labels:
      - "traefik.enable=true" 
      - "traefik.docker.network=frontend"
      - "traefik.backend=prometheus"
      - "traefik.port=9090"

      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.middlewares=auth"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"

